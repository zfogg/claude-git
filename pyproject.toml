[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "claude-git"
version = "0.2.0"
description = "Parallel version control for AI changes"
readme = "README.md"
authors = [{name = "Claude Git Contributors"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8.1"
dependencies = [
    "click>=8.0.0",
    "rich>=13.0.0",
    "gitpython>=3.1.0",
    "pydantic>=2.0.0",
    "watchdog>=3.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pytest>=8.3.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
claude-git = "claude_git.cli:main"

[project.urls]
Homepage = "https://github.com/zfogg/claude-git"
Repository = "https://github.com/zfogg/claude-git"
Issues = "https://github.com/zfogg/claude-git/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["claude_git*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=claude_git --cov-report=term-missing --cov-report=html --testmon"
testmon_ignore_dependencies = ["setuptools", "pip", "wheel"]

[dependency-groups]
dev = [
    "pytest-testmon>=2.1.3",
    "ruff>=0.12.11",
]

[tool.ruff]
target-version = "py38"
line-length = 88
indent-width = 4

exclude = [
    ".git",
    ".claude-git", 
    "__pycache__",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # Pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "S",    # bandit security
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "PIE",  # flake8-pie
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
]

ignore = [
    "S101",  # Use of assert
    "A003",  # Builtin attribute shadowing
    "S603",  # subprocess calls (many are intentional git commands)
    "S607",  # subprocess partial paths (git is in PATH) 
    "S110",  # try-except-pass (sometimes appropriate)
    "E722",  # bare except (sometimes appropriate)
    "S108",  # temporary file usage (test files)
    "E501",  # line too long (let formatter handle)
    "S112",  # try-except-continue (sometimes appropriate)
    "SIM108", # ternary operator preference
    "SIM102", # nested if statements (sometimes clearer)
    "B904",  # raise from err (not always needed)
]

fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["claude_git"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
